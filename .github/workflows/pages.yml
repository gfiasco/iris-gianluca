name: Deploy Jekyll site to GitHub Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      JEKYLL_ENV: production
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure Pages
        uses: actions/configure-pages@v5

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.0"        # parity with your GitLab image
          bundler-cache: true        # caches gems using Gemfile.lock

      - name: Generate .env
        env:
          GET_HELP:        ${{ vars.GET_HELP }}
          IRIS_NUMBER:     ${{ vars.IRIS_NUMBER }}
          GIAN_NUMBER:     ${{ vars.GIAN_NUMBER }}
          EUR_NAME:        ${{ vars.EUR_NAME }}
          EUR_IBAN:        ${{ secrets.EUR_IBAN }}
          IRIS_PAY:        ${{ secrets.IRIS_PAY }}
          GBP_NAME:        ${{ vars.GBP_NAME }}
          GBP_SORT:        ${{ secrets.GBP_SORT }}
          GBP_ACCOUNT:     ${{ secrets.GBP_ACCOUNT }}
          GBP_IBAN:        ${{ secrets.GBP_IBAN }}
        run: |
          {
            printf 'get_help=%s\n'    "$GET_HELP"
            printf 'iris_number=%s\n' "$IRIS_NUMBER"
            printf 'gian_number=%s\n' "$GIAN_NUMBER"
            printf 'EUR_NAME=%s\n'    "$EUR_NAME"
            printf 'EUR_IBAN=%s\n'    "$EUR_IBAN"
            printf 'IRIS_PAY=%s\n'    "$IRIS_PAY"
            printf 'GBP_NAME=%s\n'    "$GBP_NAME"
            printf 'GBP_SORT=%s\n'    "$GBP_SORT"
            printf 'GBP_ACCOUNT=%s\n' "$GBP_ACCOUNT"
            printf 'GBP_IBAN=%s\n'    "$GBP_IBAN"
          } > .env


      - name: Install gems
        run: bundle install --jobs 4 --retry 3

      - name: Build with Jekyll
        run: bundle exec jekyll build -d _site   # or -d public if you prefer

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site                             # match the build dir above

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
